DROP TABLE IF EXISTS mpa_and_film;
DROP TABLE IF EXISTS film_genre;
DROP TABLE IF EXISTS likes;
DROP TABLE IF EXISTS genres;
DROP TABLE IF EXISTS mpa;
DROP TABLE IF EXISTS friends;
DROP TABLE IF EXISTS films;
DROP TABLE IF EXISTS users;





CREATE TABLE IF NOT EXISTS films (
	id int GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
	name varchar(100) NOT NULL,
	description varchar(200),
	releaseDate date,
	duration integer,
	rate integer 
);
CREATE TABLE IF NOT EXISTS users (
	id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	email varchar(100) NOT NULL,
	login varchar(100) NOT NULL,
	name varchar(100),
	birthday date
);
CREATE TABLE IF NOT EXISTS friends (
	id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	id_host integer REFERENCES users (id) ON DELETE CASCADE,
	id_friend integer REFERENCES users (id)ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS likes (
	id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	id_film integer REFERENCES films (id),
	id_user integer REFERENCES users (id) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS genres (
	id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar(40)
);
CREATE TABLE IF NOT EXISTS film_genre (
	id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	id_film integer REFERENCES films (id) ON DELETE CASCADE,
	id_genre integer REFERENCES genres (id) ON DELETE RESTRICT
);
CREATE TABLE IF NOT EXISTS mpa (
	id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar(40)
);
CREATE TABLE IF NOT EXISTS mpa_and_film (
	id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	id_film integer REFERENCES films (id) ON DELETE CASCADE,
	id_mpa integer REFERENCES mpa (id) ON DELETE RESTRICT
);

